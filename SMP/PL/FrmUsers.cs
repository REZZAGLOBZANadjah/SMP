using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using SMP.EPL;
namespace SMP.PL
{
    public partial class FrmUsers: Form
    {
        DB_SMPEntities db = new DB_SMPEntities();
        // elements for delete function
        
        TB_Users tb_Users = new TB_Users();
        BL.Methods methods = new BL.Methods();
        int id;
        public FrmUsers()
        {
            InitializeComponent();


            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            SMP.DB_SMPEntities dbContext = new SMP.DB_SMPEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.TB_Users.LoadAsync().ContinueWith(loadTask =>
            {
    // Bind data to control when loading complete
    gridControlUsers.DataSource = dbContext.TB_Users.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            PL.FrmUsersAdd frmAddUsers  = new PL.FrmUsersAdd();
            frmAddUsers.id = 0;
            frmAddUsers.btnAddUsers.Text = "اضافة";
            frmAddUsers.Show();
        }

        private void btnUpdate_Click(object sender, EventArgs e)
        {
             db  = new DB_SMPEntities();
            gridControlUsers.DataSource = db.TB_Users.ToList();
        }

        // delete purchase
        private void btnDel_Click(object sender, EventArgs e)
        {
            Toast toast = new Toast();
            Dialog dialog = new Dialog();
            id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("User_Id"));
            if(id>0)
            {
                try
                {
                    var rs = MessageBox.Show("عملية حذف", "هل أنت متأكد من هذه العملية", MessageBoxButtons.YesNo);

                    if (rs == DialogResult.Yes)
                    {
                        tb_Users = db.TB_Users.Where(x => x.User_Id == id).FirstOrDefault();
                        db.Entry(tb_Users).State = EntityState.Deleted;
                        db.SaveChanges();
                        toast.txtCaption.Text = "تم حذف  مستخدم";
                        toast.Show();
                        updateData();
                    }
                }
                catch
                {
                    dialog.txtCaption.Text = "لا يوجد  مستخدم لحذفها ";
                    dialog.Width = this.Width;
                    dialog.Show();


                }
            }
            else
            {
                dialog.txtCaption.Text = "لا يوجد  مستخدم لحذفه ";
                dialog.Width = this.Width;
                dialog.Show();
            }
            


        }
        //function update data in gridview
        public void updateData()
        {
            Dialog dialog = new Dialog();

            db = new DB_SMPEntities();
            gridControlUsers.DataSource = db.TB_Users.ToList();
            
          
        }

        private void btnSearch_Click(object sender, EventArgs e)
        {
            var _search = editSearch.Text;
            gridControlUsers.DataSource = db.TB_Users.Where(x => x.User_Name.Contains(_search)||
                                                          x.User_Roll.Contains(_search)  ).ToList();
        }
        // edit supplier
        private void btnEdit_Click(object sender, EventArgs e)
        {
            PL.FrmUsersAdd frmAddUsers = new PL.FrmUsersAdd();
            Toast toast = new Toast();
            Dialog dialog = new Dialog();
            try
            {
                id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("User_Id"));
                tb_Users = db.TB_Users.Where(x => x.User_Id == id).FirstOrDefault();
                if (id > 0)
                {
                    frmAddUsers.editNameUsers.Text = tb_Users.User_Name;
                    frmAddUsers.editUsersPass.Text = tb_Users.User_Pass;
                    frmAddUsers.editUsersRoll.Text = tb_Users.User_Roll;

                    frmAddUsers.id = id;
                    frmAddUsers.btnAddUsers.Text = " تعديل ";
                    frmAddUsers.Show();
                    updateData();
                }
                else
                {
                    toast.txtCaption.Text = "لا يوجد  مستخدم لتعديله  ";
                    toast.Show();
                }
            }
            catch

            {
                toast.txtCaption.Text = "لا يوجد  مستخدم لتعديله ";
                toast.Show();
            }

        }

       
    }
}
