using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using SMP.EPL;
namespace SMP.PL
{
    public partial class FrmCus: Form
    {
        DB_SMPEntities db = new DB_SMPEntities();
        // elements for delete function
        TB_Cus tb_Cus = new TB_Cus();
        BL.Methods methods = new BL.Methods();
        int id;
        public FrmCus()
        {
            InitializeComponent();


            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            SMP.DB_SMPEntities dbContext = new SMP.DB_SMPEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.TB_Cus.LoadAsync().ContinueWith(loadTask =>
            {
    // Bind data to control when loading complete
    gridControlCus.DataSource = dbContext.TB_Cus.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            PL.FrmCusAdd frmAddCus = new PL.FrmCusAdd();
            frmAddCus.id = 0;
            frmAddCus.btnAddCus.Text = "اضافة";
            frmAddCus.Show();
            //updateData();
        }

        private void btnUpdate_Click(object sender, EventArgs e)
        {
             db  = new DB_SMPEntities();
            gridControlCus.DataSource = db.TB_Cus.ToList();
        }

        // delete supplier
        private void btnDel_Click(object sender, EventArgs e)
        {
            Toast toast = new Toast();
            Dialog dialog = new Dialog();
            id = Convert.ToInt32(tileView1.GetFocusedRowCellValue("Cus_Id"));
            if(id>0)
            {
                try
                {
                    var rs = MessageBox.Show("عملية حذف", "هل أنت متأكد من هذه العملية", MessageBoxButtons.YesNo);

                    if (rs == DialogResult.Yes)
                    {
                        tb_Cus = db.TB_Cus.Where(x => x.Cus_Id == id).FirstOrDefault();
                        db.Entry(tb_Cus).State = EntityState.Deleted;
                        db.SaveChanges();
                        toast.txtCaption.Text = "تم حذف زبون";
                        toast.Show();
                        updateData();
                    }
                }
                catch
                {
                    dialog.txtCaption.Text = "لا يوجد زبون لحذفه ";
                    dialog.Width = this.Width;
                    dialog.Show();


                }
            }
            else
            {
                dialog.txtCaption.Text = "لا يوجد زبون لحذفه ";
                dialog.Width = this.Width;
                dialog.Show();
            }
            


        }
        //function update data in gridview
        public void updateData()
        {
            db = new DB_SMPEntities();
            gridControlCus.DataSource = db.TB_Cus.ToList();
        }

        private void btnSearch_Click(object sender, EventArgs e)
        {
            var _search = editSearch.Text;
            gridControlCus.DataSource = db.TB_Cus.Where(x => x.Cus_Name.Contains(_search)||
                                                          x.Cus_Phone.Contains(_search)||
                                                          x.Cus_Email.Contains(_search)).ToList();
        }
        // edit supplier
        private void btnEdit_Click(object sender, EventArgs e)
        {
            PL.FrmCusAdd frmAddSup = new PL.FrmCusAdd();
            Toast toast = new Toast();
            Dialog dialog = new Dialog();
            try
            {
                id = Convert.ToInt32(tileView1.GetFocusedRowCellValue("Cus_Id"));
                tb_Cus = db.TB_Cus.Where(x => x.Cus_Id == id).FirstOrDefault();
                if (tb_Cus != null)
                {
                    frmAddSup.editNameCus.Text = tb_Cus.Cus_Name.ToString();
                    frmAddSup.editPhoneCus.Text = tb_Cus.Cus_Phone.ToString();
                    frmAddSup.edtEmailCus.Text = tb_Cus.Cus_Email.ToString();


                    methods.by = tb_Cus.Cus_Image;
                    frmAddSup.picCoverCus.Image = Image.FromStream(methods.convertImage());
                    frmAddSup.id = id;
                    frmAddSup.btnAddCus.Text = "تعديل";
                    frmAddSup.Show();
                    updateData();

                }
                else
                {
                    toast.txtCaption.Text = "لا يوجد زبون لتعديله ";
                    toast.Show();
                }
                
            }
            catch
            {
                toast.txtCaption.Text = "لا يوجد زبون لتعديله ";
                toast.Show();

            }




        }


    }
}
