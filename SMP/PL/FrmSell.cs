using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using SMP.EPL;
namespace SMP.PL
{
    public partial class FrmSell: Form
    {
        DB_SMPEntities db = new DB_SMPEntities();
        // elements for delete function
        //TB_SUPP tb_Supp = new TB_SUPP();
        TB_Sell tb_Sell = new TB_Sell();
        BL.Methods methods = new BL.Methods();
        int id;
        public FrmSell()
        {
            InitializeComponent();

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            SMP.DB_SMPEntities dbContext = new SMP.DB_SMPEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.TB_Sell.LoadAsync().ContinueWith(loadTask =>
            {
    // Bind data to control when loading complete
    gridControlSell.DataSource = dbContext.TB_Sell.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            PL.FrmSellAdd frmAddSell = new PL.FrmSellAdd();
            frmAddSell.id = 0;
            frmAddSell.btnAddSell.Text = "اضافة";
            frmAddSell.Show();
        }

        private void btnUpdate_Click(object sender, EventArgs e)
        {
             db  = new DB_SMPEntities();
            gridControlSell.DataSource = db.TB_Sell.ToList();
        }

        // delete purchase
        private void btnDel_Click(object sender, EventArgs e)
        {
            Toast toast = new Toast();
            Dialog dialog = new Dialog();
            id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("Sell_Id"));
            if(id>0)
            {
                try
                {
                    var rs = MessageBox.Show("عملية حذف", "هل أنت متأكد من هذه العملية", MessageBoxButtons.YesNo);

                    if (rs == DialogResult.Yes)
                    {
                        tb_Sell = db.TB_Sell.Where(x => x.Sell_Id == id).FirstOrDefault();
                        db.Entry(tb_Sell).State = EntityState.Deleted;
                        db.SaveChanges();
                        toast.txtCaption.Text = "تم حذف عملية بيع";
                        toast.Show();
                        updateData();
                        
                    }
                }
                catch
                {
                    dialog.txtCaption.Text = "لا يوجد عملية بيع لحذفها ";
                    dialog.Width = this.Width;
                    dialog.Show();


                }
            }
            else
            {
                dialog.txtCaption.Text = "لا يوجد عملية بيع لحذفه ";
                dialog.Width = this.Width;
                dialog.Show();
            }
            


        }
        //function update data in gridview
        public void updateData()
        {
            db = new DB_SMPEntities();
            gridControlSell.DataSource = db.TB_Sell.ToList();
        }

        private void btnSearch_Click(object sender, EventArgs e)
        {
            var _search = editSearch.Text;
            gridControlSell.DataSource = db.TB_Sell.Where(x => x.Sell_Name.Contains(_search)||
                                                          x.Sell_Cus.Contains(_search) ).ToList();
        }
        // edit supplier
        private void btnEdit_Click(object sender, EventArgs e)
        {
            PL.FrmSellAdd frmAddSell = new PL.FrmSellAdd();
            Toast toast = new Toast();
            Dialog dialog = new Dialog();
            try
            {
                id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("Sell_Id"));
                tb_Sell = db.TB_Sell.Where(x => x.Sell_Id == id).FirstOrDefault();
                if (tb_Sell != null)
                {
                    frmAddSell.editSellName.Text = tb_Sell.Sell_Name;
                    frmAddSell.editCus.Text = tb_Sell.Sell_Cus;
                    frmAddSell.editSellPrice.Text = tb_Sell.Sell_Price.ToString();
                    frmAddSell.editQte.Text = tb_Sell.Sell_Qte.ToString();
                    //frmAddSell.editDate.Text = tb_Sell.Sell_Date.ToString();

                    //frmAddSell.editTBuy.Text = tb_Sell.Sell_Buy.ToString();
                    //frmAddSell.editTSell.Text = tb_Sell.Sell_Sell.ToString();
                    //frmAddSell.editTQte.Text = tb_Sell.Sell_Qt.ToString();

                    frmAddSell.id = id;
                    frmAddSell.btnAddSell.Text = " تعديل ";
                    frmAddSell.Show();
                    updateData();
                }
                else
                {
                    toast.txtCaption.Text = "لا يوجد عملية بيع لتعديلها ";
                    toast.Show();
                }
                
            }
            catch

            {
                toast.txtCaption.Text = "لا يوجد عملية بيع لتعديله ";
                toast.Show();
            }

        } 

    }
}
